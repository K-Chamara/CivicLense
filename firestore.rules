rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // TEMPORARY: Very permissive rules for debugging login issues
    // TODO: Make more restrictive after login is working
    
    // Users: allow all operations temporarily
    match /users/{userId} {
      allow read, write: if true;
    }
    
    // Users collection: allow all operations temporarily
    match /users {
      allow read, write: if true;
    }
    
    // Concerns: basic rules
    match /concerns/{concernId} {
      allow create: if request.auth != null;
      allow read: if true; // Allow public read for now
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }
    
    // Concern comments: basic rules
    match /concern_comments/{commentId} {
      allow read, write: if request.auth != null;
    }
    
    // Concern updates: basic rules
    match /concern_updates/{updateId} {
      allow read, write: if request.auth != null;
    }
    
    // Notifications: basic rules
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null;
    }
    
    // Budget data: allow public read
    match /budget_categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /budget_items/{itemId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Tenders: allow public read
    match /tenders/{tenderId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Tender applications: basic rules
    match /tender_applications/{applicationId} {
      allow read, write: if request.auth != null;
    }
    
    // Concern supports: basic rules
    match /concern_supports/{supportId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow everything else for now
    match /{document=**} {
      allow read, write: if true;
    }
  }
}